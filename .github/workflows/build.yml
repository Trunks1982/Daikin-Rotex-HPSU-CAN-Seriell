name: Compile ESPHome Binary

on:
  push:
    #branches:
    #  - main
    #  - dev
    paths:
      - '.github/**'
      - 'examples/full_*.yaml'
      - 'components/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check for required secrets
        run: |
          if [ -z "${{ secrets.API_ENCRYPTION_KEY }}" ]; then
            echo "Error: API_ENCRYPTION_KEY secret is not set" >&2
            exit 1
          fi
          if [ -z "${{ secrets.OTA_PASSWORD }}" ]; then
            echo "Error: OTA_PASSWORD secret is not set" >&2
            exit 1
          fi
          if [ -z "${{ secrets.WIFI_SSID }}" ]; then
            echo "Error: WIFI_SSID secret is not set" >&2
            exit 1
          fi
          if [ -z "${{ secrets.WIFI_PASSWORD }}" ]; then
            echo "Error: WIFI_PASSWORD secret is not set" >&2
            exit 1
          fi
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
  
      - name: Set environment variables 
        run: | 
          echo "API_ENCRYPTION_KEY=${{ secrets.API_ENCRYPTION_KEY }}" >> $GITHUB_ENV
          echo "OTA_PASSWORD=${{ secrets.OTA_PASSWORD }}" >> $GITHUB_ENV
          echo "WIFI_SSID=${{ secrets.WIFI_SSID }}" >> $GITHUB_ENV
          echo "WIFI_PASSWORD=${{ secrets.WIFI_PASSWORD }}" >> $GITHUB_ENV

      - name: Install C++ build dependencies
        run: |
          sudo apt-get install cmake g++ libgtest-dev
  
      - name: Build and run unit tests
        run: |
          ls -al

          cmake . -B build
          cmake --build build
          build/tests

      - name: Install ESPHome and yq
        run: |
          python3 -m pip install esphome

          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Compile ESPHome binaries
        run: |
          for yaml_file in examples/full_*.yaml; do
            LANG=$(basename "$yaml_file" .yaml | sed 's/full_//')

            cp .github/workflows/resources/secrets.yaml examples/

            yq eval '.external_components[0].source = {"type": "local", "path": "../components"}' -i "examples/full_${LANG}.yaml"
            esphome compile "examples/full_${LANG}.yaml"

            mkdir -p bin/
            mv examples/.esphome/build/hpsu-can/.pioenvs/hpsu-can/firmware.factory.bin "bin/hpsu-can-${LANG}.factory-gpios-tx05-rx06.bin"
          done

      - name: Archive compiled binaries
        uses: actions/upload-artifact@v4
        with:
          name: compiled-binaries
          path: bin/*.factory-gpios-tx05-rx06.bin
